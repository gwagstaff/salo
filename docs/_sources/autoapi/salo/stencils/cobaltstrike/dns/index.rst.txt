:py:mod:`salo.stencils.cobaltstrike.dns`
========================================

.. py:module:: salo.stencils.cobaltstrike.dns


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   salo.stencils.cobaltstrike.dns.CobaltStrikeDNSC2




Attributes
~~~~~~~~~~

.. autoapisummary::

   salo.stencils.cobaltstrike.dns.DOMAINS


.. py:data:: DOMAINS
   :annotation: = ['c2.dns.getbobspizza.com']

   

.. py:class:: CobaltStrikeDNSC2(__pydantic_self__, **data: Any)

   Bases: :py:obj:`salo.SaloStencilModel`

   Mixin to provide __str__, __repr__, and __pretty__ methods. See #884 for more details.

   __pretty__ is used by [devtools](https://python-devtools.helpmanual.io/) to provide human readable representations
   of objects.

   .. py:attribute:: dns_query
      :annotation: :Optional[str]

      

   .. py:attribute:: dns_version
      :annotation: :int

      

   .. py:attribute:: dns_rcode
      :annotation: :int

      

   .. py:attribute:: dns_rcode_name
      :annotation: :str

      

   .. py:attribute:: dns_qtype
      :annotation: :int

      

   .. py:attribute:: dns_qtype_name
      :annotation: :str

      

   .. py:attribute:: dns_rdata
      :annotation: :Optional[List[str]]

      

   .. py:attribute:: dns_ttl
      :annotation: :Optional[List[int]]

      

   .. py:attribute:: dns_qa
      :annotation: :bool

      

   .. py:attribute:: dns_rd
      :annotation: :bool

      

   .. py:attribute:: dns_ra
      :annotation: :bool

      

   .. py:attribute:: dns_type
      :annotation: :str

      

   .. py:attribute:: proto
      :annotation: :str

      

   .. py:attribute:: service
      :annotation: :str

      

   .. py:attribute:: dest_port
      :annotation: :int

      

   .. py:method:: set_dns_query(cls, v)


   .. py:method:: set_dns_rdata(cls, v)



